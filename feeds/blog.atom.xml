<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>NickNagel.com - Blog</title><link href="https://dr-nick-nagel.github.io/" rel="alternate"></link><link href="https://dr-nick-nagel.github.io/feeds/blog.atom.xml" rel="self"></link><id>https://dr-nick-nagel.github.io/</id><updated>2024-08-21T00:00:00-04:00</updated><entry><title>What does Looking at Imagery with text-based AI Tell us about Creativity?</title><link href="https://dr-nick-nagel.github.io/blog/creative-ai.html" rel="alternate"></link><published>2024-08-21T00:00:00-04:00</published><updated>2024-08-21T00:00:00-04:00</updated><author><name>Nick Nagel</name></author><id>tag:dr-nick-nagel.github.io,2024-08-21:/blog/creative-ai.html</id><summary type="html">&lt;p&gt;Some thoughts as we start delving into general AI ...&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Backdrop&lt;/h1&gt;
&lt;p&gt;So I had an interesting morning which involved working with AI and I'm kind of excited about it, so, figured it was "blog-worthy". First, a bit of background. I've had long-standing interests in many things, two of which include &lt;em&gt;scalable vector graphics&lt;/em&gt; (SVG) for illustration and, of course, &lt;em&gt;artificial intelligence&lt;/em&gt;. Lately, I've been working on my long neglected personal website which has been sorely in need of an update for many years, and using the hot new LLM's (Large Language Models) to flesh out some technical details. &lt;/p&gt;
&lt;p&gt;The fascinating thing about LLM's is that the architectural principle on which they're built is exquisitely simple. Essentially it boils down to a probabilistic model that predicts possible continuations given a prompt-generated discourse context. Such systems appear to be exhibiting intelligent linguistic behavior based on nothing more than an "educated guess" as to how to continue the next sentence fragment of a discourse. The key to understanding how these systems work is that the output is not deterministic -- it's not generated by explicit rules expressed in program code. Instead, it's a stochastic process enabling the system to &lt;em&gt;learn&lt;/em&gt;. &lt;/p&gt;
&lt;p&gt;Let's pause for a moment and consider just what this implies. I've had a long-standing interest in the nature of consciousness going back to my adolescence. In college I made it a formal study. But after reading Plato, Aristotle, Descartes and all the rest, and Dennett's &lt;em&gt;Consciousnesses Explained&lt;/em&gt;, I was left with the vague dissatisfaction that, really, very little in these works actually explain consciousness at all. It wasn't until I got to grad school and started working with the then nascent mathematics of neural networks that I really started to understand the implications of the building blocks of consciousnesses. &lt;/p&gt;
&lt;p&gt;Fast-forward to the present and the stunning rise of applied AI. Maybe I should say re-emergence. Broadly speaking, research into AI has gone through many incarnations since it's inception. Here I'm referring to the application of neural-network architectures and, more recently, transformers which have completely disrupted how we think and do business in the information age. &lt;/p&gt;
&lt;p&gt;The implications of so many discussions around AI bubbling up into public awareness, are that these systems have crossed a tipping point. Simple mathematical principles applied in the context of exponentially increasing computational power have given rise to systems exhibiting emergent properties which we might call &lt;em&gt;creativity&lt;/em&gt; in people. For the moment, anyway, let's limit the scope of the discourse to creativity.&lt;/p&gt;
&lt;h1&gt;Putting Creativity to the Test&lt;/h1&gt;
&lt;p&gt;So given that backdrop, I wanted to go ahead and put the creativity of these systems to the test. Historically, philosophers and scientists have long debated whether computers, with all their proficiency at number crunching, could ever be creative in the way that humans can. For example, in 1950 Turing advanced the concept of the behavioral test for computer intelligence. John Searle later proposed the "Chinese Room Argument" to suggest that computers, even if it seems like they do, can't really &lt;em&gt;understand&lt;/em&gt; language. &lt;/p&gt;
&lt;p&gt;So I decided to conduct a little experiment of my own. One of my site updates includes an SVG self portrait (as I said I have a long-standing interest in using SVG for illustration). As I was working on the image it occurred to me that what I'd drawn could use some more pizzazz. That got me to thinking; everybody's using AI these days to augment their prose. But what about imagery? Yes -- I'm aware that there are numerous generative AI applications that generate imagery (shameless self-promotion -- more posts on that coming soon), but I was curious about the text-based applications I've been using lately, namely ChatGPT and Google's Gemini. Also, the image-based generative AI systems don't operate on SVG. &lt;/p&gt;
&lt;p&gt;So I set about to try an "experiment" with Gemini. The conversation went something like this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Nick:&lt;/strong&gt; Wanna try an experiment?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Gemini:&lt;/strong&gt; Absolutely! I'm ready to experiment. Let's see what we can discover. What do you have in mind?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Nick:&lt;/strong&gt; I'll send you my self portrait in SVG and I want you to try to make it more interesting.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Gemini:&lt;/strong&gt; Let's do it! I'm excited to see what kind of transformations we can achieve with your self-portrait. Send it over when you're ready, and we'll explore some creative options.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Sadly, when I tried sending the SVG, it ended up breaking Gemini. The system just hung there and spun causing me to have to bounce my browser. &lt;/p&gt;
&lt;p&gt;Despite the initial fail, we can still make some interesting observations. By now, it's pretty well known that the dominant LLM's on the market, while really good at generating some types of discourse (given sufficiently detailed prompts), often are prone to make wild assertions while sounding extremely confident. The phenomenon's been deemed "hallucination". When I first encountered these types of assertions I thought of them as (unapologetically tongue-in-cheek) "lies". The point is that these systems don't appear quite ready to differentiate between education and deception/misrepresentation (perhaps an argument for the "absense of understanding" side of the debate). &lt;/p&gt;
&lt;p&gt;Still I was intrigued. All this &lt;em&gt;trying to get a text-based system to draw in SVG&lt;/em&gt; recalled to mind an NPR story I heard a while back. It was a segment on "This American Life" where David Kestenbaum was interviewing a Microsoft engineer working on ChatGPT around the time of its big public release. He was very excited about the insights that were emerging based on interactions with the system. Part of the interview included a discussion of how the  engineer hit on the notion of testing whether ChatGPT 4 could "draw". Given that the text-based LLM's can't really draw per se, the engineer took the same approach. He tried to get ChatGPT to draw a unicorn using TikZ (a LaTeX package used to create vector graphics -- kind of similar to SVG). &lt;/p&gt;
&lt;p&gt;So I fired up ChatGPT and asked it to draw a unicorn in SVG. And this is what I got...&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/chat_uni.svg"  /&gt;&lt;/p&gt;
&lt;p&gt;It's actually not too different from what the engineer described the as the TikZ output. The system attempted to portray a unicorn using shapes, paths and colors available to it in the mathematical markup language it could use to generate its output. Does that imply we can say, "This is what ChatGPT 'thinks' a unicorn is"?&lt;/p&gt;
&lt;h1&gt;My Key Insights&lt;/h1&gt;
&lt;p&gt;So what can we conclude from these little experiments? I mean, to me, the drawing's pretty lame. 'Looks more like a pig than a unicorn. And if you ask ChatGPT to get more creative it pretty much gives you back only slight variations on the theme. Same shapes, same colors, same unicorn features. I was hoping for something more like this...&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/inkscape_unicorn.svg", width=300  /&gt;&lt;/p&gt;
&lt;p&gt;Or even this ...&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/unicorn-mlp.svg", width=300  /&gt;&lt;/p&gt;
&lt;p&gt;Still, what's interesting to me about all this is what emerges from these systems based on nothing more than base variations on connectionist architectures and a few variations on activation rules, loss functions and optimizers. What's neat to me is how, given these atomic building blocks, the system at least &lt;em&gt;appears&lt;/em&gt; to have developed an internal representation, a &lt;em&gt;mental model&lt;/em&gt; if you will, of what a unicorn is supposed to be. The system has never explicitly been programmed or "told" how to draw a unicorn. And yet it seems to be creative enough to express its "understanding" using the languages at it's disposal.&lt;/p&gt;
&lt;p&gt;So does all this amount to a definitive answer to the creativity question? For now I'll leave it to the reader to decide. But what's most certain is the debate over the emergent properties of creativity in automated information processing systems has never been more salient. Researchers and practitioners involved in the creation of AI systems have identified stages of AI development ranging from &lt;em&gt;narrow&lt;/em&gt; to &lt;em&gt;general&lt;/em&gt; to &lt;em&gt;super&lt;/em&gt;. I've also heard a lot of (rightful) concern around the ethics surrounding the deployment of AI applications. Many artists and creative types express grave concerns over their potential displacement by creative (general?) AI systems. &lt;/p&gt;
&lt;p&gt;All that being said, I don't think it's debatable that we are very deep into the early stages of the emergence of general artificial intelligence with everything that that implies. I firmly believe that we are well down the road to understanding how to architect and create systems capable of general intelligence. But beyond that, I feel that exploring and understanding the internal representations of such systems can provide valuable knowledge and insights leading to deeper understanding of the nature of &lt;em&gt;our own awareness&lt;/em&gt;. 
And while I completely acknowledge the need to get ahead of the eight-ball with regard to the ethical deployment and utilization of these systems, I, for one, am keen to continue the exploration!&lt;/p&gt;
&lt;h1&gt;Resources&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;"Greetings, People of Earth." This American Life. WBEZ Chicago, 23 June 2023.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Searle, J. R. (1980). Minds, brains, and programs. Behavioral and Brain Sciences, 3(3), 417-457.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Turing, A. M. (1950). Computing machinery and intelligence. Mind, 59(236), 433-460.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;Special Thanks&lt;/h1&gt;
&lt;p&gt;Immense gratitude to &lt;a href="https://pixabay.com/users/openclipart-vectors-30363/"&gt;OpenClipart-Vectors on pixabay&lt;/a&gt; for open use of the human generated unicorn art.&lt;/p&gt;</content><category term="Blog"></category><category term="philosophy"></category><category term="artificial intelligence"></category><category term="creativity"></category><category term="consciousness"></category><category term="art"></category><category term="SVG"></category><category term="vector graphics"></category></entry><entry><title>Simple Advice</title><link href="https://dr-nick-nagel.github.io/blog/simple-advice.html" rel="alternate"></link><published>2024-08-01T00:00:00-04:00</published><updated>2024-08-01T00:00:00-04:00</updated><author><name>Nick Nagel</name></author><id>tag:dr-nick-nagel.github.io,2024-08-01:/blog/simple-advice.html</id><summary type="html">&lt;p&gt;Here's some sound advice...&lt;/p&gt;</summary><content type="html">&lt;p&gt;Last week at the closing of one of my kung fu classes my sifu offered up a final lesson for the session. The teaching resonated deeply with me so I want to take the opportunity to share it here. It's summarized in three simple maxims: (1) &lt;em&gt;don't overthink it&lt;/em&gt;, (2) &lt;em&gt;don't over analyze it&lt;/em&gt;, and (3) &lt;em&gt;don't compare&lt;/em&gt;. &lt;/p&gt;
&lt;p&gt;As I thought about these words I knew exactly what Sifu meant in the context of class. I've been studying Wa Lum Tum Toi (northern mantis style kung fu) for decades. Over the years I've seen many students come and go. The system is hard work, there's a steep learning curve and it takes a toll on your body. But you get out of it what you put into it. If you train hard your body responds and you find yourself thinking more clearly, physically reacting more sharply, and possessed of a serenity that manifests in all aspects of life. &lt;/p&gt;
&lt;p&gt;The reason for the lesson that night was that we have a mix of students of varying degrees. Some have been at it longer than others and the range of ages in the class is from youthful high-schoolers to retirees in their seventies! With such a mix of talent, experience, and physical constraints, it's inevitable that you see differences in performance of the system forms -- the exercises that comprise the kung fu curriculum. And that's what prompted the lesson. &lt;/p&gt;
&lt;p&gt;&lt;em&gt;Don't overthink it.&lt;/em&gt; Free your mind to act. When learning something new (a new kung fu form, for example) it's easy to fall prey to overthinking things. Some of the forms in our system literally can take up to 15 minutes to complete and involve hundreds of moves. The thing is, all the moves can be broken down into basic chunks that form the core of the system. And the way you learn these building blocks is through practice and repetition. There's no magical, easy way in. Learning kung fu, or learning anything else for that matter, takes effort. From kung fu to art to mathematics, if you are not afraid to put in the effort you eventually get to a place where you no longer have to think. Given enough practice, the moves come naturally and seem effortless. So in following the path to excellence, don't overthink things. You'll struggle at first -- it's inevitable.  But if you keep at it, eventually you'll simply flow like water. In the words of Bruce Lee: "be water".&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Don't over analyze it.&lt;/em&gt; This second maxim is calling upon us to break out of the tendency toward over analysis. It might seem paradoxical coming from an information scientist -- someone swimming daily in the tools and techniques of quantitative analytics -- but there is an art to analysis. We need to analyze processes enough to achieve understanding, to streamline and optimize, but only just enough and not too much more. In kung fu we analyze scenarios to understand force and kinematics at a visceral level. But, again, you reach a point where you can't spend all your time over analyzing a situation. So analysis is great and necessary. But the teaching is to be careful about &lt;em&gt;over&lt;/em&gt;analyzing a situation which can lead to inaction. If you're in a sparring match, and your opponent throws a kick, you just need to block it in the simplest way. Sometimes you just need to act! Programming, though different from kung fu, is the same. It's far too easy to worry whether your solution is eloquent enough, or uses the latest and greatest language feature, when more often than not the simplest function gets the job done in the most usable and maintainable way.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Don't compare&lt;/em&gt;. It is this last point that, perhaps, resonated most deeply with me that evening. But what does it mean, really? If you've ever had an interest in pursuing some activity -- say, art, for example -- and become intimidated in comparing your work to others then you might start to get the idea. As I mentioned, there are many students in my kung fu class ranging widely in age and body type. And everyone has different reasons for coming to class. If a novice falls into the trap of comparing their performance to someone who's been at it for years it'd be easy to get discouraged and depressed. I feel that societal demands, wrongly, often lead to this kind of thinking in many facets of life. From earliest childhood on we're constantly being compared and evaluated against others, when in fact each individual has unique strengths and talents that they can bring to the table, given half a chance.  &lt;/p&gt;
&lt;p&gt;The beauty of this wisdom is it obviously doesn't just apply to kung fu. To me, these teachings are profoundly relevant to many spheres of life. Reflecting on the principles I'm reminded of a phrase I first learned from a student of mine when I taught java programming for Sun Microsystems many years ago; "paralysis by analysis". I love this phrase because it so aptly describes a tendency we all fall prey to, especially in this age of information overflow. With so much in our environment vying for our attention, it's too easy to spend all our time over analyzing a situation and get nothing done. In software engineering and project planning, the tendency toward over analysis is a major consideration in the dialectic between "cascade" approaches to project planning verses "agile" methodologies. But that's a major discussion which I'll set aside for another time. &lt;/p&gt;
&lt;p&gt;Comparing ourselves and our performance against others is a trap. Unfortunately though, it's a pitfall too easy to fall into given the competitive demands of our environment. Unnecessarily comparing ourselves and our performance to others can harm the ego in many ways. One is over inflation. For whatever reason, it's all too common to observe the cognitive bias in many individuals who tend to overestimate their abilities and accomplishments. I'll never forget walking into the office one morning to hear a newly hired young programmer proclaim; "I'm a genius! I wrote a script months ago that I just re-used this morning!" 'Turns out the script amounted to a glorified file-copy on a linux system. But my point is to try to be self-aware enough to have pride in one's strengths but have enough humility to recognize one's limits. In my opinion, one doesn't proclaim oneself a genius. Genius is recognized by others. &lt;/p&gt;
&lt;p&gt;But the other side of the coin also holds true. While true that there's a tendency in some to overestimate their competence there are tendencies in others to underestimate their capabilities and achievements. As a lover of art, for example, I've recently discovered the joy of painting with oils. But attending a recent art studio session (part of my continuous efforts toward lifelong learning) I became intimidated seeing the masterful work produced by other artists in attendance. But, again, at a subsequent session, another artist offered the same simple advice as my kung fu sifu; "don't compare your work to others". Every artist has their own style -- that's what makes you an artist. Who can compare Van Gogh to Leonardo Da Vinci? Frank Frazetta is vastly inspirational to me as an artist and yet spent much time drawing comic books (which, again, is another topic worthy of more elaborate discussion). But, say what you will about the merits of comics as a form of art, one of his original paintings (an illustration for a pulp magazine) recently sold for over five million dollars. &lt;/p&gt;
&lt;p&gt;My point is that it's often useless to attempt to judge our own efforts and achievements by way of comparison against others. Recently, I've been hearing the term "imposter syndrome" along with concern over its concomitant features of self-doubt, perfectionism and anxiety. It seems that it's become increasingly easy to lower one's self-estimation in our new information age with increasing demands for workplace and social comparison. Instead, I feel it's increasingly important not to get discouraged upon seeing amazing work and the achievements of others and feeling that our own creative efforts fall short in comparison. Instead I'll have to ask that you please allow me the cliche; whatever you may end up doing in life, whatever path you may walk, just がんばってね . Do your best. &lt;/p&gt;</content><category term="Blog"></category><category term="philosophy"></category></entry><entry><title>Setting up to Blog with Pelican</title><link href="https://dr-nick-nagel.github.io/blog/pelican-themes.html" rel="alternate"></link><published>2024-07-29T00:00:00-04:00</published><updated>2024-07-29T00:00:00-04:00</updated><author><name>Nick Nagel</name></author><id>tag:dr-nick-nagel.github.io,2024-07-29:/blog/pelican-themes.html</id><content type="html">&lt;p&gt;Most critical Pelican Docs out of the gate...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.getpelican.com/en/3.6.2/quickstart.html"&gt;Quick Start&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.getpelican.com/en/latest/themes.html"&gt;Themes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.getpelican.com/en/latest/pelican-themes.html"&gt;pelican-themes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.getpelican.com/en/latest/settings.html"&gt;Settings&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Process&lt;/p&gt;
&lt;p&gt;RESUME HERE...&lt;/p&gt;</content><category term="Blog"></category><category term="pelican"></category><category term="themes"></category><category term="setup"></category></entry><entry><title>Using LaTeX with Pelican</title><link href="https://dr-nick-nagel.github.io/blog/latex-pelican.html" rel="alternate"></link><published>2024-07-25T00:00:00-04:00</published><updated>2024-07-25T00:00:00-04:00</updated><author><name>Nick Nagel</name></author><id>tag:dr-nick-nagel.github.io,2024-07-25:/blog/latex-pelican.html</id><summary type="html">&lt;p&gt;If you have an interest in maching learning and want to write about it, odd are at some point you'll want to add in some math. So how do you do that with Pelican?&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is a test for LaTeX rendering.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Same line rendering: $\color{red}{f(x) = x^2}$ . The math should render in-lined.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Same line rendering: $f(x) = x^2$ . The math should render in-lined.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TEST: if I had $1,000,000.00, I would buy you a house...&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Block Rendering. Remember the activation function?&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;$$
\sigma \left( \sum a_i w_{ij} + b_j \right)
$$&lt;/p&gt;</content><category term="Blog"></category><category term="math"></category><category term="LaTeX"></category><category term="equations"></category></entry></feed>